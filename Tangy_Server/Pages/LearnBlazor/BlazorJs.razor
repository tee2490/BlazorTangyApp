@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary m-1" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    <button class="btn btn-success m-1" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-1" @onclick="ToastrFailure">Toastr Failure</button>
</div>

<div class="row">
    <button class="btn btn-success m-1" 
            @onclick="SweetAlertSuccess">
        SweetAlert Success
    </button>
    <button class="btn btn-danger m-1" 
            @onclick="SweetAlertFailure">
        SweetAlert Failure
    </button>
</div>

<div class="row text-center mt-4">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation Pending!</p>
    }
</div>

@code {

    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.ConfirmBox(ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Success Ja");
    }

    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrError("Error Ja");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task completed successfully!");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task failed!");
    }

}