@page "/category/create"
@page "/category/edit/{id:int}"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name" />
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }

    </div>
</div>

@code {
    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";

    [Parameter]
    public int Id { get; set; }

    public bool IsLoading { get; set; } = true;
    protected override async Task OnInitializedAsync()
    {
        if (Id == 0)
        {
            //create
            IsLoading = false;
        }
        else
        {
            //update
            await Task.Delay(1000);
            Title = "Update";
            await Task.Run(LoadCategory);
        }

    }

    private void LoadCategory()
    {
        Category = _categoryRepository.Get(Id);
        IsLoading = false;
    }

    private void UpsertCategory()
    {
        if (Category.Id == 0)
        {
            //create
            _categoryRepository.Create(Category);
        }
        else
        {
            //update
            _categoryRepository.Update(Category);
        }
        _navigationManager.NavigateTo("category");
    }
}
